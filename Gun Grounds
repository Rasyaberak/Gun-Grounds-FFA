local distance = Value3
local height = Value2
local speed = Value1
-- made By Projeto LKB scriptblox.com --

loadstring(game:HttpGet(("https://raw.githubusercontent.com/REDzHUB/LibraryV2/main/redzLib")))()
local l = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/dxhooknotify/src.lua", true))()

MakeWindow({
  Hub = {
    Title =  "[FPS] Gun Grounds FFA",
    Animation = "By RasyX"
  },
  Key = {
    KeySystem = false,
    Title = "Key System",
    Description = "[FPS] Gun Grounds FFA",
    KeyLink = "https://raw.githubusercontent.com/dqtixz/key-system-mdfgbgk-dwflgk-nerrnmtr/main/ryj11374973493528790352797537297%20246949%2054795ergjternbrt%20j",
    Keys = {"keyjgfeihefnm22","Projeto"},
    Notifi = {
      Notifications = true,
      CorrectKey = "Running the Script...",
      Incorrectkey = "The key is incorrect",
      CopyKeyLink = "Copied to Clipboard"
    }
  }
})

-- Initialize the loading tab and label
local CheckLoading = MakeTab({Name = "Loading Status"})
local LabelLoading = AddTextLabel(CheckLoading, "Initializing...")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to update the label with a loading sequence
local function UpdateLabel(text, duration)
    LabelLoading.Text = text
    wait(duration)
end

-- Function to verify user and player information
local function VerifyUser()
    if LocalPlayer and LocalPlayer.UserId then
        if LocalPlayer.Name and LocalPlayer.Name ~= "" then
            return true
        end
    end
    return false
end

-- Loading sequence
local function LoadingSequence()
    local messages = {
        "Verifying User... üîé",
        "Verifying Player Info... üë§",
        "Initializing Script... ‚è≥"
    }

    for i, message in ipairs(messages) do
        UpdateLabel(message, 1)
        if i < #messages then
            UpdateLabel(message .. " | Progress: " .. i .. "/" .. #messages, 0.5)
        end
    end

    if VerifyUser() then
        UpdateLabel("User Verified Successfully!", 1)
        UpdateLabel("Welcome, " .. LocalPlayer.Name .. "!", 1)
    else
        UpdateLabel("User Verification Failed!", 2)
        return
    end

    UpdateLabel("All systems go! üöÄ", 1)
end

LoadingSequence()
wait(1)

-- Logs Tab
local MainLogs = MakeTab({Name = "Logs"})
AddParagraph(MainLogs, {"Made By RasyX"})
AddParagraph(MainLogs, {"[ FEATURES ] AimBot, ESP ( NEW ),"})
AddParagraph(MainLogs, {"25/09/2024", "Version 0.0.8"})
wait(1)
AddParagraph(MainLogs, {"There will probably be a script update, coming soon!! üëΩ"})
wait(1)

local Main = MakeTab({Name = "Main"})
wait(1)

local function aimAndShoot(config)
    _G.config = config

    local player = game.Players.LocalPlayer
    local camera = game.Workspace.CurrentCamera
    local targetPlayer = nil

    -- Prediction for moving targets
    local function predictPosition(target)
        local targetPart = target.Character[config.TargetPart]
        local targetVelocity = target.Character.HumanoidRootPart.Velocity
        local predictionTime = (targetPart.Position - camera.CFrame.Position).magnitude / config.ProjectileSpeed
        return targetPart.Position + targetVelocity * predictionTime
    end

    -- Check if the target is visible (considering walls)
    local function isTargetVisible(target)
        local targetPosition = target.Character[config.TargetPart].Position
        local ray = Ray.new(camera.CFrame.Position, (targetPosition - camera.CFrame.Position).unit * 100)
        local hit, position = game.Workspace:FindPartOnRay(ray, player.Character)

        return hit == nil or hit:IsDescendantOf(target.Character)
    end

    -- Aim assist for smoother aiming towards target
    local function aimAssist(targetPos, currentPos)
        local aimStrength = config.AimAssistStrength
        return currentPos:Lerp(targetPos, aimStrength)
    end

    -- Function to confuse the target player
    local function makePlayerConfused(targetPlayer)
        if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("Humanoid") then
            return
        end

        local humanoid = targetPlayer.Character.Humanoid
        local playerCamera = game.Workspace.CurrentCamera

        -- Flip controls to confuse movement
        humanoid.WalkSpeed = -humanoid.WalkSpeed
        wait(1.5)
        humanoid.WalkSpeed = -humanoid.WalkSpeed

        -- Random camera movements for disorientation
        for i = 1, 5 do
            local randomRotation = math.random(-90, 90)
            playerCamera.CFrame = playerCamera.CFrame * CFrame.Angles(math.rad(randomRotation), 0, 0)
            wait(0.1)
        end

        -- Random teleportation to nearby positions
        for i = 1, 3 do
            local randomOffset = Vector3.new(math.random(-5, 5), 0, math.random(-5, 5))
            local newPosition = humanoid.Parent.PrimaryPart.Position + randomOffset
            humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(newPosition))
            wait(0.3)
        end
    end

    -- Auto-shoot function with confusion effect
    local function autoShoot(target)
        if target then
            local humanoid = target.Parent:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                humanoid:TakeDamage(75) -- Increased damage to make shots more powerful
                -- Trigger confusion effect on the target player
                local targetPlayer = game.Players:GetPlayerFromCharacter(target.Parent)
                makePlayerConfused(targetPlayer)
            end
        end
    end

    -- Fake Lag Implementation
    local function applyFakeLag()
        local originalPosition = player.Character.HumanoidRootPart.Position
        local fakeLagDuration = 0.2 -- Lag duration in seconds
        wait(fakeLagDuration)
        player.Character.HumanoidRootPart.Position = originalPosition
    end

    -- Highlight the target with a visual indicator
    local function highlightTarget(target)
        if target and target.Character then
            for _, part in pairs(target.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.BrickColor = BrickColor.new("Bright red") -- Change the target's color to red
                end
            end
        end
    end

    -- Main function to get closest valid target
    local function getClosestTarget()
        local closestTarget = nil
        local shortestDistance = math.huge

        for _, otherPlayer in pairs(game.Players:GetPlayers()) do
            if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild(config.TargetPart) then
                local targetPos = otherPlayer.Character[config.TargetPart].Position
                local distance = (targetPos - player.Character.Head.Position).magnitude

                -- Check if the target is on the enemy team
                local isEnemy = config.TeamCheck and otherPlayer.Team ~= player.Team

                if distance < shortestDistance and (not config.TeamCheck or isEnemy) then
                    shortestDistance = distance
                    closestTarget = otherPlayer
                end
            end
        end

        return closestTarget
    end

    -- Main loop for aiming and shooting
    while true do
        local closestTarget = getClosestTarget()

        if closestTarget and closestTarget.Character and closestTarget.Character:FindFirstChild(config.TargetPart) then
            if isTargetVisible(closestTarget) then -- Check visibility
                local predictedPosition = predictPosition(closestTarget)
                local aimPos = aimAssist(predictedPosition, camera.CFrame.Position) -- Aim assist
                camera.CFrame = CFrame.new(camera.CFrame.Position, aimPos) -- Adjust camera to aim at predicted position
                highlightTarget(closestTarget) -- Highlight the target visually
                autoShoot(closestTarget.Character[config.TargetPart]) -- Auto-shoot when aim is locked
                applyFakeLag() -- Apply fake lag to confuse other players
            end
        end

        wait(0.01) -- Short delay for optimization
    end
end

-- Button for AimBot (Mobile Compatible)
AddButton(Main, {
    Name = "AimBot",
    Callback = function()
        local config = {
            Fov = 180,
            MaxTransparency = 0.1,
            Smoothness = 0.1,
            AimAssistStrength = 0.7, -- Increased aim assist strength for better accuracy
            TargetPart = "Head",
            TeamCheck = true, -- Enable team check
            WallCheck = true,
            MaxDistanceEnabled = false,
            MaxDistance = 1500,
            FovColor = Color3.fromRGB(102, 45, 145),
            ProjectileSpeed = 1000 -- Projectile speed for prediction
        }

        loadstring(game:HttpGet("https://raw.githubusercontent.com/dqtixz/aimbot/main/Projeto%20LKA%20x%20F%20Hub", true))()
        wait(0.1)
        l:Notify("Script Loaded!", "AimBot", 3)

        aimAndShoot(config) -- Call the aim and shoot function with the configuration
    end
})

-- ESP Player
AddButton(Main, {
    Name = "Esp",
    Callback = function()

        -- ESP HIGHLIGHT 
        local DepthMode = "AlwaysOnTop"
        local FillTransparency = 0.5
        local OutlineColor = Color3.fromRGB(255, 255, 255)
        local OutlineTransparency = 0

        local CoreGui = game:GetService("CoreGui")
        local Players = game:GetService("Players")
        local lp = Players.LocalPlayer
        local connections = {}

        local Storage = Instance.new("Folder")
        Storage.Parent = CoreGui
        Storage.Name = "Highlight_Storage"

        local function UpdateHighlightColor(Highlight, distance, isOwnTeam)
            if isOwnTeam then
                Highlight.FillColor = Color3.fromRGB(0, 150, 255) -- Brighter Blue for own team
            else
                if distance < 20 then
                    Highlight.FillColor = Color3.fromRGB(200, 255, 200) -- Brighter Green for very close
                elseif distance < 50 then
                    Highlight.FillColor = Color3.fromRGB(255, 255, 100) -- Brighter Orange for somewhat close
                else
                    Highlight.FillColor = Color3.fromRGB(255, 150, 150) -- Brighter Red for far away
                end
            end
        end

        local function Highlight(plr)
            local Highlight = Instance.new("Highlight")
            Highlight.Name = plr.Name
            Highlight.DepthMode = DepthMode
            Highlight.FillTransparency = FillTransparency
            Highlight.OutlineColor = OutlineColor
            Highlight.OutlineTransparency = OutlineTransparency
            Highlight.Parent = Storage

            local function UpdateAdornee(char)
                if char then
                    Highlight.Adornee = char
                else
                    Highlight.Adornee = nil -- Clear Adornee if character does not exist
                end
            end

            -- Set the initial Adornee to the player's character
            UpdateAdornee(plr.Character)

            -- Update Adornee when the player's character respawns
            connections[plr] = plr.CharacterAdded:Connect(function(char)
                UpdateAdornee(char)
            end)

            -- Constantly update the color based on distance
            local distanceConnection
            distanceConnection = game:GetService("RunService").Heartbeat:Connect(function()
                if plr and plr.Character and lp and lp.Character then
                    local distance = (lp.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude
                    local isOwnTeam = (plr.Team == lp.Team) -- Check if the player is on the same team
                    UpdateHighlightColor(Highlight, distance, isOwnTeam)
                end
            end)

            -- Store connection so it can be cleaned up later
            connections[plr] = {characterConnection = connections[plr], distanceConnection = distanceConnection}
        end

        local function CheckTeamHighlight(plr)
            Highlight(plr) -- Highlight all players, the color will be set based on team
        end

        Players.PlayerAdded:Connect(function(plr)
            plr.CharacterAdded:Wait() -- Wait for the character to be added
            CheckTeamHighlight(plr) -- Highlight player based on team
        end)

        -- Initialize highlights for existing players
        for _, plr in next, Players:GetPlayers() do
            CheckTeamHighlight(plr) -- Check existing players on team
        end

        Players.PlayerRemoving:Connect(function(plr)
            if Storage:FindFirstChild(plr.Name) then
                Storage[plr.Name]:Destroy()
            end
            if connections[plr] then
                -- Disconnect both CharacterAdded and distance updates
                if connections[plr].characterConnection then
                    connections[plr].characterConnection:Disconnect()
                end
                if connections[plr].distanceConnection then
                    connections[plr].distanceConnection:Disconnect()
                end
                connections[plr] = nil
            end
        end)

        l:Notify("Visual Script Loaded!", "ESP üëΩ", 3)
    end
})

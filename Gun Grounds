local distance = Value3
local height = Value2
local speed = Value1
-- made By Projeto LKB scriptblox.com --

loadstring(game:HttpGet(("https://raw.githubusercontent.com/REDzHUB/LibraryV2/main/redzLib")))()
local l = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/dxhooknotify/src.lua", true))()

MakeWindow({
  Hub = {
    Title =  "[FPS] Gun Grounds FFA",
    Animation = "By RasyX"
  },
  Key = {
    KeySystem = false,
    Title = "Key System",
    Description = "[FPS] Gun Grounds FFA",
    KeyLink = "https://raw.githubusercontent.com/dqtixz/key-system-mdfgbgk-dwflgk-nerrnmtr/main/ryj11374973493528790352797537297%20246949%2054795ergjternbrt%20j",
    Keys = {"keyjgfeihefnm22","Projeto"},
    Notifi = {
      Notifications = true,
      CorrectKey = "Running the Script...",
      Incorrectkey = "The key is incorrect",
      CopyKeyLink = "Copied to Clipboard"
    }
  }
})

-- Initialize the loading tab and label
local CheckLoading = MakeTab({Name = "Loading Status"})
local LabelLoading = AddTextLabel(CheckLoading, "Initializing...")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to update the label with a loading sequence
local function UpdateLabel(text, duration)
    LabelLoading.Text = text
    wait(duration)
end

-- Function to verify user and player information
local function VerifyUser()
    if LocalPlayer and LocalPlayer.UserId then
        if LocalPlayer.Name and LocalPlayer.Name ~= "" then
            return true
        end
    end
    return false
end

-- Loading sequence
local function LoadingSequence()
    local messages = {
        "Verifying User... üîé",
        "Verifying Player Info... üë§",
        "Initializing Script... ‚è≥"
    }

    for i, message in ipairs(messages) do
        UpdateLabel(message, 1)
        if i < #messages then
            UpdateLabel(message .. " | Progress: " .. i .. "/" .. #messages, 0.5)
        end
    end

    if VerifyUser() then
        UpdateLabel("User Verified Successfully!", 1)
        UpdateLabel("Welcome, " .. LocalPlayer.Name .. "!", 1)
    else
        UpdateLabel("User Verification Failed!", 2)
        return
    end

    UpdateLabel("All systems go! üöÄ", 1)
end

LoadingSequence()
wait(1)

-- Logs Tab
local MainLogs = MakeTab({Name = "Logs"})
AddParagraph(MainLogs, {"Made By RasyX"})
AddParagraph(MainLogs, {"[ FEATURES ] AimBot, ESP ( NEW ),"})
AddParagraph(MainLogs, {"25/09/2024", "Version 0.0.8"})
wait(1)
AddParagraph(MainLogs, {"There will probably be a script update, coming soon!! üëΩ"})
wait(1)

local Main = MakeTab({Name = "Main"})
wait(1)

local function aimAndShoot(config)
    _G.config = config

    local player = game.Players.LocalPlayer
    local camera = game.Workspace.CurrentCamera
    local targetPlayer = nil

    -- Prediksi untuk target yang bergerak
    local function predictPosition(target)
        local targetPart = target.Character[config.TargetPart]
        local targetVelocity = target.Character.HumanoidRootPart.Velocity
        local predictionTime = (targetPart.Position - camera.CFrame.Position).magnitude / config.ProjectileSpeed
        return targetPart.Position + targetVelocity * predictionTime
    end

    -- Cek apakah target terlihat (line of sight check)
    local function isTargetVisible(target)
        local targetPosition = target.Character[config.TargetPart].Position
        local ray = Ray.new(camera.CFrame.Position, (targetPosition - camera.CFrame.Position).unit * 100)
        local hit, position = game.Workspace:FindPartOnRay(ray, player.Character)
        return hit == nil or hit:IsDescendantOf(target.Character)
    end

    -- Wall Hack and Target Highlight
    local function highlightTarget(target)
        if config.WallHack then
            -- Make walls transparent
            for _, part in pairs(game.Workspace:GetDescendants()) do
                if part:IsA("BasePart") and not part:IsDescendantOf(target.Character) then
                    part.Transparency = config.MaxTransparency
                end
            end
        end
        
        -- Highlight target
        if config.HighlightTarget then
            local targetPart = target.Character[config.TargetPart]
            if targetPart then
                targetPart.Transparency = config.TargetTransparency
                local highlight = Instance.new("SelectionBox", targetPart)
                highlight.Adornee = targetPart
                highlight.Color3 = config.HighlightColor
                highlight.LineThickness = 0.05
            end
        end
    end

    -- Aim assist with custom strength
    local function aimAssist(targetPos, currentPos)
        local aimStrength = config.AimAssistStrength
        return currentPos:Lerp(targetPos, aimStrength)
    end

    -- Auto-reload function
    local function autoReload()
        local tool = player.Backpack:FindFirstChildOfClass("Tool")
        if tool and tool:FindFirstChild("Ammo") then
            if tool.Ammo.Value <= 0 then
                tool:Activate() -- Reload automatically if ammo is out
                wait(1) -- Wait a moment to reload
            end
        end
    end

    -- Auto-shoot function
    local function autoShoot(target)
        if target then
            local humanoid = target.Parent:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                autoReload() -- Auto-reload if needed
                humanoid:TakeDamage(1000) -- Apply damage
            end
        end
    end

    -- Fake Lag Simulation
    local function simulateFakeLag()
        if config.FakeLag then
            wait(config.FakeLagAmount) -- Delay to simulate fake lag
        end
    end

    -- Line of Sight function (draw line from player to target)
    local function drawLineToTarget(target)
        if config.LineOfSight then
            local beam = Instance.new("Beam", camera)
            local startPos = Instance.new("Attachment", camera)
            local endPos = Instance.new("Attachment", target.Character[config.TargetPart])
            beam.Attachment0 = startPos
            beam.Attachment1 = endPos
            beam.Color = ColorSequence.new(config.LineColor)
            beam.Width0 = 0.05
            beam.Width1 = 0.05
        end
    end

    -- Main aim loop
    while true do
        -- Find the closest and valid target
        local closestTarget = getClosestTarget()

        if closestTarget and closestTarget.Character and closestTarget.Character:FindFirstChild(config.TargetPart) then
            if isTargetVisible(closestTarget) then -- Check if the target is visible
                local targetPos = closestTarget.Character[config.TargetPart].Position
                local aimPos = aimAssist(targetPos, camera.CFrame.Position) -- Aim assist
                camera.CFrame = CFrame.new(camera.CFrame.Position, aimPos) -- Adjust camera direction

                highlightTarget(closestTarget) -- Highlight and apply wall hack
                drawLineToTarget(closestTarget) -- Draw line to the target

                simulateFakeLag() -- Simulate fake lag before shooting
                autoShoot(closestTarget.Character[config.TargetPart]) -- Auto-shoot when aiming at the target
            end
        end

        wait(0.01) -- Add delay for optimization
    end
end

-- Button for AimBot (Mobile Compatible)
AddButton(Main, {
    Name = "AimBot",
    Callback = function()
        local config = {
            Fov = 180,
            MaxTransparency = 0.1,
            Smoothness = 0.1, -- For smoother aim
            AimAssistStrength = 0.5, -- Aim assist strength
            TargetPart = "Head",
            TeamCheck = false,
            WallCheck = true,
            HighlightTarget = true,
            TargetTransparency = 0.5, -- Target highlight transparency
            HighlightColor = Color3.fromRGB(255, 0, 0), -- Red highlight color
            LineOfSight = true,
            LineColor = Color3.fromRGB(0, 255, 0), -- Green line of sight color
            FakeLag = true,
            FakeLagAmount = 0.2, -- Delay in seconds to simulate lag
            MaxDistanceEnabled = false,
            MaxDistance = 1500,
            FovColor = Color3.fromRGB(102, 45, 145),
            ProjectileSpeed = 1000 -- Projectile speed for target prediction
        }

        loadstring(game:HttpGet("https://raw.githubusercontent.com/dqtixz/aimbot/main/Projeto%20LKA%20x%20F%20Hub", true))()
        wait(0.1)
        l:Notify("Script Load !", "AimBot", 3)

        aimAndShoot(config) -- Call the aim and shoot function with the configuration
    end
})

-- ESP Player
AddButton(Main, {
    Name = "Esp",
    Callback = function()
        local FillColor = Color3.fromRGB(150, 255, 150) -- Even brighter green for close range
        local DepthMode = "AlwaysOnTop"
        local FillTransparency = 0.5
        local OutlineColor = Color3.fromRGB(255, 255, 255)
        local OutlineTransparency = 0

        local CoreGui = game:FindService("CoreGui")
        local Players = game:FindService("Players")
        local lp = Players.LocalPlayer
        local connections = {}

        local Storage = Instance.new("Folder")
        Storage.Parent = CoreGui
        Storage.Name = "Highlight_Storage"

        local function UpdateHighlightColor(Highlight, distance)
            if distance < 20 then
                Highlight.FillColor = Color3.fromRGB(150, 255, 150) -- Brighter green for close
            elseif distance < 50 then
                Highlight.FillColor = Color3.fromRGB(255, 220, 0) -- Brighter orange for medium range
            else
                Highlight.FillColor = Color3.fromRGB(255, 100, 100) -- Brighter red for far away
            end
        end

        local function Highlight(plr)
            local Highlight = Instance.new("Highlight")
            Highlight.Name = plr.Name
            Highlight.FillColor = FillColor
            Highlight.DepthMode = DepthMode
            Highlight.FillTransparency = FillTransparency
            Highlight.OutlineColor = OutlineColor
            Highlight.OutlineTransparency = OutlineTransparency
            Highlight.Parent = Storage

            local function UpdateAdornee(char)
                if char then
                    Highlight.Adornee = char
                end
            end

            -- Set the initial Adornee to the player's character
            UpdateAdornee(plr.Character)

            -- Update Adornee when the player's character respawns
            connections[plr] = plr.CharacterAdded:Connect(function(char)
                UpdateAdornee(char)
            end)

            -- Constantly update the color based on distance
            local distanceConnection
            distanceConnection = game:GetService("RunService").Heartbeat:Connect(function()
                if plr and plr.Character and lp and lp.Character then
                    local distance = (lp.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude
                    UpdateHighlightColor(Highlight, distance)
                end
            end)

            -- Store connection so it can be cleaned up later
            connections[plr] = {characterConnection = connections[plr], distanceConnection = distanceConnection}
        end

        Players.PlayerAdded:Connect(Highlight)

        for i, v in next, Players:GetPlayers() do
            Highlight(v)
        end

        Players.PlayerRemoving:Connect(function(plr)
            if Storage:FindFirstChild(plr.Name) then
                Storage[plr.Name]:Destroy()
            end
            if connections[plr] then
                -- Disconnect both CharacterAdded and distance updates
                connections[plr].characterConnection:Disconnect()
                connections[plr].distanceConnection:Disconnect()
                connections[plr] = nil
            end
        end)
        
        l:Notify("Visual Script Load !", "Esp Highlight", 3)
    end
})

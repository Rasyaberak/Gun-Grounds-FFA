local distance = Value3
local height = Value2
local speed = Value1
-- made By Projeto LKB scriptblox.com --

loadstring(game:HttpGet(("https://raw.githubusercontent.com/REDzHUB/LibraryV2/main/redzLib")))()
local l = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/dxhooknotify/src.lua", true))()

MakeWindow({
  Hub = {
    Title =  "[FPS] Gun Grounds FFA",
    Animation = "By RasyX"
  },
  Key = {
    KeySystem = false,
    Title = "Key System",
    Description = "[FPS] Gun Grounds FFA",
    KeyLink = "https://raw.githubusercontent.com/dqtixz/key-system-mdfgbgk-dwflgk-nerrnmtr/main/ryj11374973493528790352797537297%20246949%2054795ergjternbrt%20j",
    Keys = {"keyjgfeihefnm22","Projeto"},
    Notifi = {
      Notifications = true,
      CorrectKey = "Running the Script...",
      Incorrectkey = "The key is incorrect",
      CopyKeyLink = "Copied to Clipboard"
    }
  }
})

-- Initialize the loading tab and label
local CheckLoading = MakeTab({Name = "Loading Status"})
local LabelLoading = AddTextLabel(CheckLoading, "Initializing...")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to update the label with a loading sequence
local function UpdateLabel(text, duration)
    LabelLoading.Text = text
    wait(duration)
end

-- Function to verify user and player information
local function VerifyUser()
    if LocalPlayer and LocalPlayer.UserId then
        if LocalPlayer.Name and LocalPlayer.Name ~= "" then
            return true
        end
    end
    return false
end

-- Loading sequence
local function LoadingSequence()
    local messages = {
        "Verifying User... üîé",
        "Verifying Player Info... üë§",
        "Initializing Script... ‚è≥"
    }

    for i, message in ipairs(messages) do
        UpdateLabel(message, 1)
        if i < #messages then
            UpdateLabel(message .. " | Progress: " .. i .. "/" .. #messages, 0.5)
        end
    end

    if VerifyUser() then
        UpdateLabel("User Verified Successfully!", 1)
        UpdateLabel("Welcome, " .. LocalPlayer.Name .. "!", 1)
    else
        UpdateLabel("User Verification Failed!", 2)
        return
    end

    UpdateLabel("All systems go! üöÄ", 1)
end

LoadingSequence()
wait(1)

-- Logs Tab
local MainLogs = MakeTab({Name = "Logs"})
AddParagraph(MainLogs, {"Made By RasyX"})
AddParagraph(MainLogs, {"[ FEATURES ] AimBot, ESP ( NEW ),"})
AddParagraph(MainLogs, {"25/09/2024", "Version 0.0.8"})
wait(1)
AddParagraph(MainLogs, {"There will probably be a script update, coming soon!! üëΩ"})
wait(1)

local Main = MakeTab({Name = "Main"})
wait(1)

-- Function to handle aiming with animation and auto-shoot (Mobile Compatible)
local function aimAndShoot(config)
    _G.config = config

    local player = game.Players.LocalPlayer
    local camera = game.Workspace.CurrentCamera
    local targetPlayer = nil

    -- Smooth aim function with animation
    local function smoothAim(targetPos, currentPos)
        local smoothSpeed = config.Smoothness
        return currentPos:Lerp(targetPos, smoothSpeed)
    end

    -- Auto-shoot function (for mobile)
    local function autoShoot(target)
        if target then
            -- Simulate a tap to shoot
            local humanoid = target.Parent:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                humanoid:TakeDamage(10)  -- Example of dealing damage directly
            end
        end
    end

    -- Highlight target function for visual feedback (31. Target Highlight)
    local function highlightTarget(target)
        if target and target.Character and target.Character:FindFirstChild(config.TargetPart) then
            local part = target.Character[config.TargetPart]
            part.BrickColor = BrickColor.new("Bright red") -- Change color to indicate hit
            wait(0.1)
            part.BrickColor = BrickColor.new("White") -- Revert color after a short delay
        end
    end

    -- Line of Sight check function (70. Line of Sight)
    local function checkLineOfSight(target)
        local ray = Ray.new(camera.CFrame.Position, (target.Position - camera.CFrame.Position).unit * 500)
        local hit, position = game.Workspace:FindPartOnRay(ray, player.Character, false, true)
        return hit == target
    end

    -- Auto target nearest player (83. Auto Target)
    local function findNearestTarget()
        local closestDistance = math.huge
        local closestPlayer = nil

        for _, playerInstance in pairs(game.Players:GetPlayers()) do
            if playerInstance ~= player and playerInstance.Character and playerInstance.Character:FindFirstChild(config.TargetPart) then
                local targetPos = playerInstance.Character[config.TargetPart].Position
                local distance = (targetPos - player.Character.Head.Position).magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = playerInstance
                end
            end
        end
        return closestPlayer
    end

    -- Main aim loop
    while true do
        targetPlayer = findNearestTarget() -- (83. Auto Target)

        if targetPlayer and checkLineOfSight(targetPlayer.Character[config.TargetPart]) then  -- (70. Line of Sight)
            -- Smooth aim towards the target (71. Aiming Assistant)
            local aimPos = smoothAim(targetPlayer.Character[config.TargetPart].Position, camera.CFrame.Position)
            camera.CFrame = CFrame.new(camera.CFrame.Position, aimPos)
            
            -- Silent aim: Temporarily set camera position to aim
            local oldPos = camera.CFrame
            camera.CFrame = CFrame.new(camera.CFrame.Position, aimPos)

            -- Auto-shoot and highlight target (31. Target Highlight)
            autoShoot(targetPlayer.Character[config.TargetPart])
            highlightTarget(targetPlayer) -- (31. Target Highlight)

            -- Restore camera position
            camera.CFrame = oldPos
        end

        wait(0.01) -- Add a short delay for optimization
    end
end

-- Button for AimBot (Mobile Compatible)
AddButton(Main, {
  Name = "AimBot",
  Callback = function()
    local config = {
        Fov = 180,
        MaxTransparency = 0.1,
        Smoothness = 0.1, -- Increase for smoother animation (71. Aiming Assistant)
        TargetPart = "Head",
        TeamCheck = false,
        WallCheck = true, -- (32. Wall Hack)
        MaxDistanceEnabled = false,
        MaxDistance = 1500,
        FovColor = Color3.fromRGB(102, 45, 145)
    }

    -- Wall Hack logic (32. Wall Hack)
    if config.WallCheck then
        config.IgnoreWalls = true
    end
    
    l:Notify("Script Load !", "AimBot", 3)
    -- Call the aim and shoot function with the enhanced aim precision (90. Aim Master)
    aimAndShoot(config)
  end
})


-- ESP Player
AddButton(Main, {
    Name = "Esp",
    Callback = function()
        local FillColor = Color3.fromRGB(150, 255, 150) -- Even brighter green for close range
        local DepthMode = "AlwaysOnTop"
        local FillTransparency = 0.5
        local OutlineColor = Color3.fromRGB(255, 255, 255)
        local OutlineTransparency = 0

        local CoreGui = game:FindService("CoreGui")
        local Players = game:FindService("Players")
        local lp = Players.LocalPlayer
        local connections = {}

        local Storage = Instance.new("Folder")
        Storage.Parent = CoreGui
        Storage.Name = "Highlight_Storage"

        local function UpdateHighlightColor(Highlight, distance)
            if distance < 20 then
                Highlight.FillColor = Color3.fromRGB(150, 255, 150) -- Brighter green for close
            elseif distance < 50 then
                Highlight.FillColor = Color3.fromRGB(255, 220, 0) -- Brighter orange for medium range
            else
                Highlight.FillColor = Color3.fromRGB(255, 100, 100) -- Brighter red for far away
            end
        end

        local function Highlight(plr)
            local Highlight = Instance.new("Highlight")
            Highlight.Name = plr.Name
            Highlight.FillColor = FillColor
            Highlight.DepthMode = DepthMode
            Highlight.FillTransparency = FillTransparency
            Highlight.OutlineColor = OutlineColor
            Highlight.OutlineTransparency = OutlineTransparency
            Highlight.Parent = Storage

            local function UpdateAdornee(char)
                if char then
                    Highlight.Adornee = char
                end
            end

            -- Set the initial Adornee to the player's character
            UpdateAdornee(plr.Character)

            -- Update Adornee when the player's character respawns
            connections[plr] = plr.CharacterAdded:Connect(function(char)
                UpdateAdornee(char)
            end)

            -- Constantly update the color based on distance
            local distanceConnection
            distanceConnection = game:GetService("RunService").Heartbeat:Connect(function()
                if plr and plr.Character and lp and lp.Character then
                    local distance = (lp.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude
                    UpdateHighlightColor(Highlight, distance)
                end
            end)

            -- Store connection so it can be cleaned up later
            connections[plr] = {characterConnection = connections[plr], distanceConnection = distanceConnection}
        end

        Players.PlayerAdded:Connect(Highlight)

        for i, v in next, Players:GetPlayers() do
            Highlight(v)
        end

        Players.PlayerRemoving:Connect(function(plr)
            if Storage:FindFirstChild(plr.Name) then
                Storage[plr.Name]:Destroy()
            end
            if connections[plr] then
                -- Disconnect both CharacterAdded and distance updates
                connections[plr].characterConnection:Disconnect()
                connections[plr].distanceConnection:Disconnect()
                connections[plr] = nil
            end
        end)
        
        l:Notify("Visual Script Load !", "Esp Highlight", 3)
    end
})


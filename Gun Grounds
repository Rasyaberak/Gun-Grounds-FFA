local distance = Value3
local height = Value2
local speed = Value1
-- made By Projeto LKB scriptblox.com --

loadstring(game:HttpGet(("https://raw.githubusercontent.com/REDzHUB/LibraryV2/main/redzLib")))()
local l = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/dxhooknotify/src.lua", true))()

MakeWindow({
  Hub = {
    Title =  "[FPS] Gun Grounds FFA",
    Animation = "By RasyX"
  },
  Key = {
    KeySystem = false,
    Title = "Key System",
    Description = "[FPS] Gun Grounds FFA",
    KeyLink = "https://raw.githubusercontent.com/dqtixz/key-system-mdfgbgk-dwflgk-nerrnmtr/main/ryj11374973493528790352797537297%20246949%2054795ergjternbrt%20j",
    Keys = {"keyjgfeihefnm22","Projeto"},
    Notifi = {
      Notifications = true,
      CorrectKey = "Running the Script...",
      Incorrectkey = "The key is incorrect",
      CopyKeyLink = "Copied to Clipboard"
    }
  }
})

-- Initialize the loading tab and label
local CheckLoading = MakeTab({Name = "Loading Status"})
local LabelLoading = AddTextLabel(CheckLoading, "Initializing...")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to update the label with a loading sequence
local function UpdateLabel(text, duration)
    LabelLoading.Text = text
    wait(duration)
end

-- Function to verify user and player information
local function VerifyUser()
    if LocalPlayer and LocalPlayer.UserId then
        if LocalPlayer.Name and LocalPlayer.Name ~= "" then
            return true
        end
    end
    return false
end

-- Loading sequence
local function LoadingSequence()
    local messages = {
        "Verifying User... üîé",
        "Verifying Player Info... üë§",
        "Initializing Script... ‚è≥"
    }

    for i, message in ipairs(messages) do
        UpdateLabel(message, 1)
        if i < #messages then
            UpdateLabel(message .. " | Progress: " .. i .. "/" .. #messages, 0.5)
        end
    end

    if VerifyUser() then
        UpdateLabel("User Verified Successfully!", 1)
        UpdateLabel("Welcome, " .. LocalPlayer.Name .. "!", 1)
    else
        UpdateLabel("User Verification Failed!", 2)
        return
    end

    UpdateLabel("All systems go! üöÄ", 1)
end

LoadingSequence()
wait(1)

-- Logs Tab
local MainLogs = MakeTab({Name = "Logs"})
AddParagraph(MainLogs, {"Made By RasyX"})
AddParagraph(MainLogs, {"[ FEATURES ] AimBot ( NEW ),"})
AddParagraph(MainLogs, {"21/09/2024", "Version 0.0.1"})
wait(1)
AddParagraph(MainLogs, {"There will probably be a script update, coming soon!! üëΩ"})
wait(1)

local Main = MakeTab({Name = "Main"})
wait(1)

local function aimAndShoot(config)
    _G.config = config

    local player = game.Players.LocalPlayer
    local camera = game.Workspace.CurrentCamera

    -- Predict position for moving targets
    local function predictPosition(target)
        local targetPart = target.Character[config.TargetPart]
        local targetVelocity = target.Character.HumanoidRootPart.Velocity
        local predictionTime = (targetPart.Position - camera.CFrame.Position).magnitude / config.ProjectileSpeed
        return targetPart.Position + targetVelocity * predictionTime
    end

    -- Aim assist with custom strength
    local function aimAssist(targetPos, currentPos)
        local aimStrength = config.AimAssistStrength
        return currentPos:Lerp(targetPos, aimStrength)
    end

    -- Random smoothness for anti-detection
    local function randomSmoothAim(targetPos, currentPos)
        local smoothSpeed = config.Smoothness + math.random() * config.SmoothnessVariation
        return currentPos:Lerp(targetPos, smoothSpeed)
    end

    -- Get the closest target
    local function getClosestTarget()
        local closestPlayer = nil
        local shortestDistance = math.huge

        for _, playerInstance in pairs(game.Players:GetPlayers()) do
            if playerInstance ~= player and playerInstance.Character and playerInstance.Character:FindFirstChild(config.TargetPart) then
                local targetPos = playerInstance.Character[config.TargetPart].Position
                local distance = (targetPos - player.Character.Head.Position).magnitude
                if distance < shortestDistance then
                    closestPlayer = playerInstance
                    shortestDistance = distance
                end
            end
        end
        return closestPlayer
    end

    -- Highlight target when hit
    local function highlightTarget(target)
        target.Character.Head.Color = Color3.fromRGB(255, 255, 255) -- Change target color to white on hit
        wait(0.1)
        target.Character.Head.Color = Color3.fromRGB(255, 0, 0) -- Reset color to red after a moment
    end

    -- Auto-reload function
    local function autoReload()
        local tool = player.Backpack:FindFirstChildOfClass("Tool")
        if tool and tool:FindFirstChild("Ammo") then
            if tool.Ammo.Value <= 0 then
                tool:Activate() -- Reload if ammo is depleted
                wait(1) -- Wait for reload
            end
        end
    end

    -- Auto-shoot function
    local function autoShoot(target)
        if target then
            local humanoid = target.Parent:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                autoReload() -- Check and perform auto-reload
                humanoid:TakeDamage(10) -- Deal damage
                highlightTarget(target) -- Highlight target hit
            end
        end
    end

    -- Main aim loop
    while true do
        local closestTarget = getClosestTarget()

        if closestTarget and closestTarget.Character and closestTarget.Character:FindFirstChild(config.TargetPart) then
            local targetPos = closestTarget.Character[config.TargetPart].Position
            local predictedPos = predictPosition(closestTarget) -- Predict target position
            local aimPos = randomSmoothAim(predictedPos, camera.CFrame.Position) -- Aim with random smoothness
            camera.CFrame = CFrame.new(camera.CFrame.Position, aimAssist(aimPos, camera.CFrame.Position)) -- Aim assist
            autoShoot(closestTarget.Character[config.TargetPart]) -- Auto-shoot
        end

        wait(0.01) -- Delay for optimization
    end
end

-- Button for AimBot (Mobile Compatible)
AddButton(Main, {
    Name = "AimBot",
    Callback = function()
        local config = {
            Fov = 180,
            MaxTransparency = 0.1,
            Smoothness = 0.1, -- For smoother aim
            SmoothnessVariation = 0.05, -- Random smoothness variation
            AimAssistStrength = 0.5, -- Aim assist strength
            TargetPart = "Head",
            TeamCheck = false,
            WallCheck = true,
            MaxDistanceEnabled = false,
            MaxDistance = 1500,
            FovColor = Color3.fromRGB(102, 45, 145),
            ProjectileSpeed = 1000 -- Projectile speed for target prediction
        }

        loadstring(game:HttpGet("https://raw.githubusercontent.com/dqtixz/aimbot/main/Projeto%20LKA%20x%20F%20Hub", true))()
        wait(0.1)
        l:Notify("Script Loaded!", "AimBot Active", 3)

        aimAndShoot(config) -- Call the aim and shoot function with configuration
    end
})

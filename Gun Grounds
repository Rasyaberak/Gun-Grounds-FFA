local distance = Value3
local height = Value2
local speed = Value1
-- made By Projeto LKB scriptblox.com --

loadstring(game:HttpGet(("https://raw.githubusercontent.com/REDzHUB/LibraryV2/main/redzLib")))()
local l = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/dxhooknotify/src.lua", true))()

MakeWindow({
  Hub = {
    Title =  "[FPS] Gun Grounds FFA",
    Animation = "By RasyX"
  },
  Key = {
    KeySystem = false,
    Title = "Key System",
    Description = "[FPS] Gun Grounds FFA",
    KeyLink = "https://raw.githubusercontent.com/dqtixz/key-system-mdfgbgk-dwflgk-nerrnmtr/main/ryj11374973493528790352797537297%20246949%2054795ergjternbrt%20j",
    Keys = {"keyjgfeihefnm22","Projeto"},
    Notifi = {
      Notifications = true,
      CorrectKey = "Running the Script...",
      Incorrectkey = "The key is incorrect",
      CopyKeyLink = "Copied to Clipboard"
    }
  }
})

-- Initialize the loading tab and label
local CheckLoading = MakeTab({Name = "Loading Status"})
local LabelLoading = AddTextLabel(CheckLoading, "Initializing...")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to update the label with a loading sequence
local function UpdateLabel(text, duration)
    LabelLoading.Text = text
    wait(duration)
end

-- Function to verify user and player information
local function VerifyUser()
    if LocalPlayer and LocalPlayer.UserId then
        if LocalPlayer.Name and LocalPlayer.Name ~= "" then
            return true
        end
    end
    return false
end

-- Loading sequence
local function LoadingSequence()
    local messages = {
        "Verifying User... üîé",
        "Verifying Player Info... üë§",
        "Initializing Script... ‚è≥"
    }

    for i, message in ipairs(messages) do
        UpdateLabel(message, 1)
        if i < #messages then
            UpdateLabel(message .. " | Progress: " .. i .. "/" .. #messages, 0.5)
        end
    end

    if VerifyUser() then
        UpdateLabel("User Verified Successfully!", 1)
        UpdateLabel("Welcome, " .. LocalPlayer.Name .. "!", 1)
    else
        UpdateLabel("User Verification Failed!", 2)
        return
    end

    UpdateLabel("All systems go! üöÄ", 1)
end

LoadingSequence()
wait(1)

-- Logs Tab
local MainLogs = MakeTab({Name = "Logs"})
AddParagraph(MainLogs, {"Made By RasyX"})
AddParagraph(MainLogs, {"[ FEATURES ] AimBot ( NEW ),"})
AddParagraph(MainLogs, {"21/09/2024", "Version 0.0.1"})
wait(1)
AddParagraph(MainLogs, {"There will probably be a script update, coming soon!! üëΩ"})
wait(1)

local Main = MakeTab({Name = "Main"})
wait(1)

-- Function to handle aiming with animation and auto-shoot (Mobile Compatible)
local function aimAndShoot(config)
    _G.config = config

    local player = game.Players.LocalPlayer
    local camera = game.Workspace.CurrentCamera
    local targetPlayer = nil

    -- Smooth aim function with animation
    local function smoothAim(targetPos, currentPos)
        local smoothSpeed = config.Smoothness
        return currentPos:Lerp(targetPos, smoothSpeed)
    end

    -- Visual Effects on Hit
    local function createHitEffect(position)
        local effect = Instance.new("ParticleEmitter")
        effect.Color = Color3.fromRGB(255, 0, 0)
        effect.Lifetime = NumberRange.new(0.5)
        effect.Rate = 50
        effect.Size = NumberSequence.new(0.5)
        effect.Speed = NumberRange.new(5)
        effect.Parent = game.Workspace:FindPartOnRay(Ray.new(position, Vector3.new(0, 1, 0)), player.Character) -- Change according to your needs

        wait(1)
        effect:Destroy() -- Clean up after use
    end

    -- Auto-shoot function (for mobile)
    local function autoShoot(target)
        if target then
            local humanoid = target.Parent:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                -- Raycasting to check if hit
                local rayOrigin = camera.CFrame.Position
                local rayDirection = (target.Position - rayOrigin).unit * 500
                local ray = Ray.new(rayOrigin, rayDirection)
                local hitPart, hitPosition = game.Workspace:FindPartOnRay(ray, player.Character, false, true)

                if hitPart and hitPart:IsDescendantOf(target.Parent) then
                    humanoid:TakeDamage(10)  -- Example of dealing damage directly
                    createHitEffect(hitPosition) -- Create hit effect
                end
            end
        end
    end

    -- Target Selection function
    local function targetSelection()
        local closestDistance = math.huge
        local closestPlayer = nil

        for _, playerInstance in pairs(game.Players:GetPlayers()) do
            if playerInstance ~= player and playerInstance.Character and playerInstance.Character:FindFirstChild(config.TargetPart) then
                local targetPos = playerInstance.Character[config.TargetPart].Position
                local distance = (targetPos - player.Character.Head.Position).magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = playerInstance
                end
            end
        end
        return closestPlayer
    end

    -- Speed Shoot function
    local function speedShoot(target)
        if target then
            -- Execute auto shoot with increased frequency
            for i = 1, config.ShootBurst do
                autoShoot(target)
                wait(config.ShootDelay)
            end
        end
    end

    -- Highlight target function for visual feedback
    local function highlightTarget(target)
        if target and target.Character and target.Character:FindFirstChild(config.TargetPart) then
            local part = target.Character[config.TargetPart]
            part.BrickColor = BrickColor.new("Bright red") -- Change color to indicate hit
            wait(0.1)
            part.BrickColor = BrickColor.new("White") -- Revert color after a short delay
        end
    end

    -- Line of Sight check function
    local function checkLineOfSight(target)
        local ray = Ray.new(camera.CFrame.Position, (target.Position - camera.CFrame.Position).unit * 500)
        local hit, position = game.Workspace:FindPartOnRay(ray, player.Character, false, true)
        return hit == target
    end

    -- Main aim loop
    while true do
        targetPlayer = targetSelection() -- Target Selection

        if targetPlayer and checkLineOfSight(targetPlayer.Character[config.TargetPart]) then
            -- Smooth aim towards the target
            local aimPos = smoothAim(targetPlayer.Character[config.TargetPart].Position, camera.CFrame.Position)
            camera.CFrame = CFrame.new(camera.CFrame.Position, aimPos)

            -- Auto-aim adjustments: Adjust aiming based on target's movement
            local targetVelocity = targetPlayer.Character[config.TargetPart].Velocity
            if targetVelocity.magnitude > 0 then
                aimPos = aimPos + targetVelocity * config.AimAdjustFactor
            end

            -- Speed Hack Integration (optional)
            if config.SpeedHackEnabled then
                player.Character.Humanoid.WalkSpeed = config.SpeedHackSpeed
            end

            -- Speed shoot and highlight target
            speedShoot(targetPlayer.Character[config.TargetPart]) -- Speed Shoot
            highlightTarget(targetPlayer)

            -- Restore camera position
            camera.CFrame = CFrame.new(camera.CFrame.Position, aimPos)
        end

        wait(0.01) -- Add a short delay for optimization
    end
end

-- Button for AimBot (Mobile Compatible)
AddButton(Main, {
  Name = "AimBot",
  Callback = function()
    local config = {
        Fov = 360,
        MaxTransparency = 0.1,
        Smoothness = 0.1, -- Increase for smoother animation
        TargetPart = "Head",
        TeamCheck = false,
        WallCheck = true, -- Wall Hack
        MaxDistanceEnabled = false,
        MaxDistance = 1500,
        FovColor = Color3.fromRGB(102, 45, 145),
        AimAdjustFactor = 0.5, -- Factor for auto-aim adjustments
        ShootBurst = 3, -- Number of shots in speed shoot
        ShootDelay = 0.1, -- Delay between shots in speed shoot
        SpeedHackEnabled = true, -- Enable speed hack
        SpeedHackSpeed = 10 -- Speed hack speed value
    }

    -- Wall Hack logic
    if config.WallCheck then
        config.IgnoreWalls = true
    end
    
    wait(0.1)
        l:Notify("Script Load!", "AimBot", 3)

    -- Call the aim and shoot function with the enhanced aim precision
    aimAndShoot(config)
  end
})

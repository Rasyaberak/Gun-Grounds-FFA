local distance = Value3
local height = Value2
local speed = Value1
-- made By Projeto LKB scriptblox.com --

loadstring(game:HttpGet(("https://raw.githubusercontent.com/REDzHUB/LibraryV2/main/redzLib")))()
local l = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/dxhooknotify/src.lua", true))()

MakeWindow({
  Hub = {
    Title =  "[FPS] Gun Grounds FFA",
    Animation = "By RasyX"
  },
  Key = {
    KeySystem = false,
    Title = "Key System",
    Description = "[FPS] Gun Grounds FFA",
    KeyLink = "https://raw.githubusercontent.com/dqtixz/key-system-mdfgbgk-dwflgk-nerrnmtr/main/ryj11374973493528790352797537297%20246949%2054795ergjternbrt%20j",
    Keys = {"keyjgfeihefnm22","Projeto"},
    Notifi = {
      Notifications = true,
      CorrectKey = "Running the Script...",
      Incorrectkey = "The key is incorrect",
      CopyKeyLink = "Copied to Clipboard"
    }
  }
})

-- Initialize the loading tab and label
local CheckLoading = MakeTab({Name = "Loading Status"})
local LabelLoading = AddTextLabel(CheckLoading, "Initializing...")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to update the label with a loading sequence
local function UpdateLabel(text, duration)
    LabelLoading.Text = text
    wait(duration)
end

-- Function to verify user and player information
local function VerifyUser()
    if LocalPlayer and LocalPlayer.UserId then
        if LocalPlayer.Name and LocalPlayer.Name ~= "" then
            return true
        end
    end
    return false
end

-- Loading sequence
local function LoadingSequence()
    local messages = {
        "Verifying User... üîé",
        "Verifying Player Info... üë§",
        "Initializing Script... ‚è≥"
    }

    for i, message in ipairs(messages) do
        UpdateLabel(message, 1)
        if i < #messages then
            UpdateLabel(message .. " | Progress: " .. i .. "/" .. #messages, 0.5)
        end
    end

    if VerifyUser() then
        UpdateLabel("User Verified Successfully!", 1)
        UpdateLabel("Welcome, " .. LocalPlayer.Name .. "!", 1)
    else
        UpdateLabel("User Verification Failed!", 2)
        return
    end

    UpdateLabel("All systems go! üöÄ", 1)
end

LoadingSequence()
wait(1)

-- Logs Tab
local MainLogs = MakeTab({Name = "Logs"})
AddParagraph(MainLogs, {"Made By RasyX"})
AddParagraph(MainLogs, {"[ FEATURES ] AimBot, ESP ( NEW ),"})
AddParagraph(MainLogs, {"25/09/2024", "Version 0.0.8"})
wait(1)
AddParagraph(MainLogs, {"There will probably be a script update, coming soon!! üëΩ"})
wait(1)

local Main = MakeTab({Name = "Main"})
wait(1)

local function aimAndShoot(config)
    _G.config = config

    local player = game.Players.LocalPlayer
    local camera = game.Workspace.CurrentCamera
    local targetPlayer = nil
    local currentAmmo = config.MaxAmmo or 10 -- Set a default max ammo
    local maxAmmo = config.MaxAmmo or 10 -- Set a default max ammo

    -- Smooth aim function with animation
    local function smoothAim(targetPos, currentPos)
        local smoothSpeed = config.Smoothness
        return currentPos:Lerp(targetPos, smoothSpeed)
    end

    -- Auto-shoot function (for mobile)
    local function autoShoot(target)
        if target and currentAmmo > 0 then
            local humanoid = target.Parent:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                humanoid:TakeDamage(600)  -- Example of dealing damage directly
                currentAmmo = currentAmmo - 1  -- Decrease ammo count after each shot
                return true -- Return true if hit
            end
        end
        return false -- Return false if no hit
    end

    -- Reload function
    local function reload()
        if currentAmmo <= 0 then
            currentAmmo = maxAmmo  -- Reset ammo after reload
        end
    end

    -- Anti-Exploit Measures
    local function antiExploit()
        if currentAmmo <= 0 then
            reload() -- Reload if ammo is out
        end
    end

    -- Hit Feedback
    local function hitFeedback(hit)
        if hit then
            -- Visual Feedback
            local hitMarker = Instance.new("Part")
            hitMarker.Size = Vector3.new(1, 1, 1)
            hitMarker.Color = Color3.new(1, 0, 0) -- Red color for hit marker
            hitMarker.Position = camera.CFrame.Position + (camera.CFrame.LookVector * 5)
            hitMarker.Anchored = true
            hitMarker.Parent = game.Workspace
            wait(0.2) -- Duration of the hit marker
            hitMarker:Destroy()

            -- Sound Feedback
            local sound = Instance.new("Sound", camera)
            sound.SoundId = "rbxassetid://123456" -- Replace with actual sound ID
            sound:Play()
            wait(0.2)
        end
    end

    -- Input Lag Compensation
    local function inputLagCompensation()
        -- Here you could monitor network latency and adjust accordingly
        -- For simplicity, this function is just a placeholder
        local latency = game:GetService("NetworkClient").GetAveragePing()
        if latency > 100 then -- Example threshold
            -- Adjust sensitivity or other parameters here based on latency
        end
    end

    -- Feature 90: Aim Master (combines all previous aim features for ultimate precision)
    local function aimMaster(targetPos, currentPos)
        local aimPos = smoothAim(targetPos, currentPos)
        camera.CFrame = CFrame.new(camera.CFrame.Position, aimPos)  -- Apply smooth aim to target
    end

    -- Highlight target function for visual feedback
    local function highlightTarget(target)
        if target and target.Character and target.Character:FindFirstChild(config.TargetPart) then
            local head = target.Character[config.TargetPart]
            head.BrickColor = BrickColor.new("Bright red") -- Change color to indicate hit
            wait(0.1)
            head.BrickColor = BrickColor.new("White") -- Revert color after a short delay
        end
    end

    -- Main aim loop
    while true do
        antiExploit() -- Apply anti-exploit measures

        -- Find closest player to aim at
        targetPlayer = nil
        local closestDistance = math.huge

        for _, playerInstance in pairs(game.Players:GetPlayers()) do
            if playerInstance ~= player and playerInstance.Character and playerInstance.Character:FindFirstChild(config.TargetPart) then
                local targetPos = playerInstance.Character[config.TargetPart].Position
                local screenPos = camera:WorldToScreenPoint(targetPos)

                -- Check if target is within the FOV
                local fovRadius = config.Fov / 2
                local distance = (targetPos - player.Character.Head.Position).magnitude
                if (Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2) - Vector2.new(screenPos.X, screenPos.Y)).magnitude < fovRadius and distance < closestDistance then
                    closestDistance = distance
                    targetPlayer = playerInstance
                end
            end
        end

        if targetPlayer then
            local targetPos = targetPlayer.Character[config.TargetPart].Position
            
            -- Feature 90: Aim Master
            aimMaster(targetPos, camera.CFrame.Position)

            -- Silent aim: Temporarily set camera position to aim
            local oldPos = camera.CFrame
            camera.CFrame = CFrame.new(camera.CFrame.Position, targetPos)
            
            -- Auto-shoot and highlight target
            local hit = autoShoot(targetPlayer.Character[config.TargetPart])
            highlightTarget(targetPlayer)
            hitFeedback(hit) -- Provide hit feedback
            
            -- Restore camera position
            camera.CFrame = oldPos

            -- Check for reload if ammo is out
            if currentAmmo <= 0 then
                reload()  -- Automatically reload if ammo is 0
            end
        end

        inputLagCompensation() -- Adjust for input lag
        wait(0.01)  -- Add a short delay for optimization
    end
end

-- Button for AimBot (Mobile Compatible)
AddButton(Main, {
    Name = "AimBot",
    Callback = function()
        local config = {
            Fov = 180,
            MaxTransparency = 0.1,
            Smoothness = 0.1, -- Increase for smoother animation
            TargetPart = "Head",
            TeamCheck = false,
            WallCheck = true,
            MaxDistanceEnabled = false,
            MaxDistance = 1500,
            MaxAmmo = 10, -- Max ammo count
            FovColor = Color3.fromRGB(102, 45, 145)
        }

        loadstring(game:HttpGet("https://raw.githubusercontent.com/dqtixz/aimbot/main/Projeto%20LKA%20x%20F%20Hub", true))()
        wait(0.1)
        l:Notify("Script Load!", "AimBot", 3)

        aimAndShoot(config) -- Call the aim and shoot function with updated features
    end
})

AddButton(Main, {
    Name = "Esp",
    Callback = function()
        local FillColor = Color3.fromRGB(180, 255, 180) -- Even brighter green for close range
local DepthMode = "AlwaysOnTop"
local FillTransparency = 0.5
local OutlineColor = Color3.fromRGB(255, 255, 255)
local OutlineTransparency = 0

local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local lp = Players.LocalPlayer
local connections = {}

local Storage = Instance.new("Folder")
Storage.Name = "Highlight_Storage"
Storage.Parent = CoreGui

-- Function to update highlight color based on distance
local function UpdateHighlightColor(Highlight, distance)
    if distance < 20 then
        Highlight.FillColor = Color3.fromRGB(180, 255, 180) -- Brighter green for close
    elseif distance < 50 then
        Highlight.FillColor = Color3.fromRGB(255, 240, 80) -- Brighter yellow-orange for medium range
    else
        Highlight.FillColor = Color3.fromRGB(255, 150, 150) -- Brighter red for far away
    end
end

-- Function to create highlights for players
local function HighlightPlayer(plr)
    if not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") then return end

    local Highlight = Instance.new("Highlight")
    Highlight.Name = plr.Name
    Highlight.FillColor = FillColor
    Highlight.DepthMode = DepthMode
    Highlight.FillTransparency = FillTransparency
    Highlight.OutlineColor = OutlineColor
    Highlight.OutlineTransparency = OutlineTransparency
    Highlight.Parent = Storage

    -- Function to update the Adornee of the Highlight
    local function UpdateAdornee(char)
        Highlight.Adornee = char and char:FindFirstChild("HumanoidRootPart") and char or nil
    end

    -- Set the initial Adornee to the player's character
    UpdateAdornee(plr.Character)

    -- Store connections for cleanup
    connections[plr] = {
        characterConnection = plr.CharacterAdded:Connect(UpdateAdornee),
        distanceConnection = RunService.Heartbeat:Connect(function()
            if plr.Character and lp.Character then
                local distance = (lp.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude
                UpdateHighlightColor(Highlight, distance)
            end
        end)
    }
end

-- Connect to PlayerAdded event
Players.PlayerAdded:Connect(HighlightPlayer)

-- Highlight already existing players
for _, plr in ipairs(Players:GetPlayers()) do
    HighlightPlayer(plr)
end

-- Function to clean up when a player is removed
local function CleanUpPlayer(plr)
    local highlight = Storage:FindFirstChild(plr.Name)
    if highlight then
        highlight:Destroy()
    end

    if connections[plr] then
        -- Disconnect all associated connections
        for _, conn in pairs(connections[plr]) do
            conn:Disconnect()
        end
        connections[plr] = nil
    end
end

-- Connect to PlayerRemoving event
Players.PlayerRemoving:Connect(CleanUpPlayer)
end
})
